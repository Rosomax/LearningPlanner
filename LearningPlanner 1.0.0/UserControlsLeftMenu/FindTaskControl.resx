<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FindTaskPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABFJJREFUWEftWF1oW2UYrviDPxeiIuiFfxeKtzq99sKubU66JulWhUEFQVFQ5sam
        6FWFtWmTk592P/2hs7RrdTKluGaXouCanPN9iXauS1fckpaxruik8+KcNmmTHt/n9MsYcixNTpoM9IEH
        Due8ed+H9/ve93u/1PwnUdcRfdHRpX7mCcfjnhBfcPiVLIhnvMM3h5e9IMwrhwZv9FV3kHFPmOsdZ1Ir
        Zy8sGcqcbsz+mTOJ5wi9O/zdlRVPmOmuEGO1PvaK+Pn2YcdA4l4KNgRho8riemopb8z9tb4pYXMytrhO
        WdWbAuwEfAh35cXrXvaYi7K2fyypz95YsxSzGS/9sWZ8NJrUXQHG6oKxR4Xb8qCl7eJ9WCZvJJ1J37QW
        sBXit95IKusOMRU+hXv72BVgQ/vHZjQ74gpM3cwb8OUO80Hh3h5QENhzpSzrv3GGlht7sq5T3SHClA4P
        LS0KwiqQHY5Q4biCXBVhSgP6XHM317AsVkHsENWNlbHVJ9Fo0eesApSD6JMOv/qJCFc8msPxROTXJUvn
        5eAE+d7dzZkIVzxcYXadzS9bOi8H1XndcNOxKMIVD8mnZspZvf8kfCOGCFc87niBd/wS7+6J8+0ukuaw
        jSKR/Mqn7RNXtrHNXLbXZm416i2MVcXSbNR03NX6lOdFuNKAKQbznFUQOxyeXMy7QlwRYUoHJmEcSTjg
        rQKVQnNYoEm73hd7WYSxB5qEJ2nYNEclq4DFED72jSW1JpkNCPf24JCVg65gXG8dmDa8Z+fModMq8FYI
        cR1n0hm6z6ivtf14jwhROhwy+9zd/bMWmlw2jqhZo7V/2th3MmmO71YCNiN+g8zRtUF1dp57RIQoHU4/
        C3l6ftF6YhmjP5E3wtEVwxVKaLsCagzVNxLd+qVpePL6OvZxk8wH7WfOMO4icSf2HJ3SkDWIg0hkUpLV
        j2GCzY1hE0ExMqHhxnDtpKMLxDPeoc/Bhqo11tAZfcn0bwctp0/fLfnZqTeOX9COqaumuKNK1kAmHbLa
        LsxuAT0MzRynAY6swsUdz3iHJmy7zxWA+6ozwCb29l/UjrO1DXEksuXYlOb0qUeEWXVA++J+p8y/bx1M
        6r18QxxEvtk7rVFGv8CyC9PKY6d8/iEpwGNvD80u98ZzprhenjP29ic1p8y+rqq42q7Ew5S5qXeGLy/3
        JTbE9ZHItwZndHofwZ4UppUH/sqQZDb73mgq00fCTHEkkjIJcT+U9eZfLGhfPUHi5j74aj4LYRvi8sa7
        I7+tUKGoe4KxB4Rp5SHJ0Wckv7pw4NurqwVx4PtfpjOSzM83tiUeFKaVx05ZfY6y9/uh8Wu528V9eGo+
        SwVxCXtSmFYHjdT9D45fy98u7sA3V1edAZ5u6PjpcWFWPTjoBlVowiAySXtxob49/qQwqS4aZc4oYzkc
        Y4fGF/K03DfqDvOnxOfqo7br3NONAa4ikyRWqe9UnhWf/sfmqKn5G6DHAnMN9ISNAAAAAElFTkSuQmCC
</value>
  </data>
</root>